%YAML:1.0

#common parameters
imu_topic: "/zed2/zed_node/imu/data_raw2"
image_topic: "/zed2/zed_node/left/image_rect_color"
output_path: "/vins_result.txt"         # vins outputs will be wrttento vins_folder_path + output_path

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 1280
image_height: 720
distortion_parameters:
   k1: -3.175e-02
   k2: 2.5427e-02
   p1: 6.27197e-04
   p2: 8.687856e-05
projection_parameters:
   fx: 5.241690042335362e+02
   fy: 5.221807623521453e+02
   cx: 6.488127170596539e+02
   cy: 3.7519465881816666e+02

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
ex_calib_result_path: "/ex_calib_result.yaml"  # If you choose 1 or 2, the extrinsic calibration result will be written vins_folder_path + ex_calib_result_path.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.00212821, 0.00256658 , 0.99999444,
           -0.99984524, -0.01745767,  0.0021727, 
           0.01746315, -0.99984431,  0.00252903]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.00005241,-0.00038503, -0.00057246]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 20                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.01449          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.00156         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.000333         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.79225e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.80249      # gravity magnitude


#loop closure parameters
loop_closure: 0   #if you want to use loop closure to minimize the drift, set loop_closure true and give your brief pattern file path and vocabulary file path accordingly;
                     #also give the camera calibration file same as feature_tracker node
pattern_file: "/support_files/brief_pattern.yml"
voc_file: "/support_files/brief_k10L6.bin"
min_loop_num: 25


